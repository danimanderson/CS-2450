USER STORIES:

1st User Story:
As a Virtual Machine, I want to store information in a certain spot in memory, so that I can access it later.

2nd User Story:
As a educational client, I want to experiment with machine language so that I can teach machine language and computer architecture using this simulator.

3rd User Story:
As a educational client, I want to change, set, and reset the color scheme so that I can have an aesthetically matching simulator.

USE CASES:

1.
    Multiply Command

    Actor: Multiply Algorithm
    System: Virtual Machine memory management, command processor, accumulator
    Goal: Multiply two values stored in memory

    1. Open Instruction File
    2. Add read instructions to get inputs from keyboard and store them in memory
    3. Add load instruction to load desired value into accumulator
    4. Add multiply instruction to perform operation
    5. Continue running instructions

2.
    Divide Command
    Actor: Divide Algorithm
    System: Virtual Machine memory management, command processor, accumulator
    Goal: Divide two values stored in memory

    1. Open Instruction File
    2. Add read instructions to get inputs from keyboard and store them in memory
    3. Add load instruction to load desired value into accumulator
    4. Add divide instruction to perform operation
    5. Continue running instructions

3. 
    Branch Command
    Actor: Branch Algorithm
    System: Virtual Machine memory management and command processor
    Goal: Divide two values stored in memory

    1. Open instruction file
    2. Get address from command
    3. Jump to given address
    4. Continue executing commands from new address

4. 
    Add Command
    Actor: Load Algorithm
    System: Virtual Machine memory management, command processor, accumulator
    Goal: Add a value from memory to the accumulator

    1. Open Instruction File
    2. Add read instructions to get inputs from keyboard and store them in memory
    3. Add load instruction to load desired value into accumulator
    4. Add the addition instruction to perform operation
    5. Continue running instructions

5.
    Subtract Command
    Actor: Subtract Algorithm
    System: Virtual Machine memory management, command processor, accumulator
    Goal: Subtract one value stored in memory from another value

    1. Open Instruction File
    2. Add read instructions to get inputs from keyboard and store them in memory
    3. Add load instruction to load desired value into accumulator
    4. Add the subtraction instruction to perform operation
    5. Continue running instructions

6.
    Store Command
    Actor: Store Algorithm
    System: Virtual Machine memory management, command processor, accumulator
    Goal: Store a word from the accumulator into a specific location in memory

    1. Open Instruction file
    2. Get memory address from the command
    3. Store a value from the accumulator into given memory address
    4. Continue running instructions

7.
    Load Command
    Actor: Load Algorithm
    System: Virtual Machine memory management, command processor, accumulator
    Goal: Load a word from a specific location in memory into the accumulator

    1. Open Instruction file
    2. Get memory address from command
    3. Load value at memory address into accumulator
    4. Continue running instructions

8. 
    Read Command
    Actor: Read Algorithm
    System: Virtual Machine memory management, command processor, accumulator
    Goal: Read a word from the keyboard into a specific location in memory

    1. Open Instruction File
    2. Prompt user for a command
    3. Make sure the command is 4 digits or less
    4. Make sure the address to write to is in memory
    5. Write user command to address
    6. Continue running instructions


9.
    Write Command
    Actor: Write Algorithm
    System: Virtual Machine memory management, command processor, accumulator
    Goal: Write a word from a specific location in memory to screen

    1. Open Instruction File
    2. Get address to write to
    3. Resize memory if needed
    4. Write to memory address
    5. Continue running instructions

10.
    Branch Zero Command
    Actor: Write Algorithm
    System: Virtual Machine memory management, command processor, accumulator
    Goal: Branch to a specific location in memory if the accumulator is zero

    1. Check to see if the accumulator is set to "0000"
    2. Get address to jump to
    3. Jump to address
    4. Continue running instructions

11.
    Primary Color Change Command
    Actor: Change Color Algorithm
    System: Color Change Class, editing .json file
    Goal: Change the primary color to a specified color then save it to be accessed next time.

    1. Open color wheel and choose color.
    2. Set specified hex code to all "secondary" colors.
    3. Save .json file.
    4. Close and reopen the GUI to see new colors.


12.
    Secondary Color Change Command
    Actor: Change Color Algorithm
    System: Color Change Class, editing .json file
    Goal: Change the secondary color to a specified color then save it to be accessed next time.

    1. Open color wheel and choose color.
    2. Set specified hex code to all "secondary" colors.
    3. Save .json file.
    


13.
    Reset Command
    Actor: Reset Algorithm
    System: Clearing text box
    Goal: Clear the text box to prepare it for a new file.

    1. Click the clear button.
    2. Text box is cleared.

14.
    Save Command
    Actor: Save Algorithm
    System: Save class
    Goal: Save any change you have made to the file you opened, whether as the existing file or new file

    1. After changes are made click save
    2. You have the option to "save as" or just save.
    3. File is updated and able to be reopened with new changes

15.
    New Instance Command
    Actor: New Instance Algorithm
    System: New Instance class
    Goal: Create a child instance of the app.

    1. Click on new instance button
    2. Use the program as you normally would.

16. Reset Colors Command
    Actor: Reset Colors Button/Algorithm
    System: Tkinter, Gui
    Goal: Reset the color to UVU colors after someone has changed the colors.

    1. Click on reset colors
    2. Colors should be resetted back to UVU colors

17. Open File Command
    Actor: Open File Button/Algorithm
    System: Computer OS
    Goal: Allows you to open up your computers directory and choose the file that you want.

    1. Click on open file button
    2. Pick file of your choosing.
    3. File now displays in text box.